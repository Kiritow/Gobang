/** NOTICE
*   This file is part of CPPLIB-SOCKET.
*   AutoGenerated and Rewritten By Kirtiow.
*
*   HC TECH 2016
*/
#include <winsock2.h>
#include <cstring>
#include <cstdlib>
#include <cstdio>

class udpsock
{
public:
    udpsock()
    {
        sfd=socket(AF_INET,SOCK_DGRAM,0);
    }
    ~udpsock()
    {
        closesocket(sfd);
    }
    bool isok(){return sfd>0;}
    int useport(int LocalPort)
    {
        struct sockaddr_in c;
        c.sin_family=AF_INET;
        c.sin_port=htons(LocalPort);
        c.sin_addr.s_addr=INADDR_ANY;
        memset(&c.sin_zero,0,sizeof(c.sin_zero));
        return ::bind(sfd,(struct sockaddr*)&c,sizeof(c));
    }
    void settarget(const char* IPAddress,int TargetPort)
    {
        target.sin_family=AF_INET;
        target.sin_port=htons(TargetPort);
        target.sin_addr.s_addr=inet_addr(IPAddress);
        memset(&target.sin_zero,0,sizeof(target.sin_zero));
    }
    int udpsend(const char* buffer,int buffersize)
    {
        return ::sendto(sfd,buffer,buffersize,0,(struct sockaddr*)&target,sizeof(target));
    }
    int udprecv(char* buffer,int buffersize)
    {
        int sz=sizeof(last_recvfrom);
        return ::recvfrom(sfd,buffer,buffersize,0,(struct sockaddr*)&last_recvfrom,&sz);
    }
    int setbrocast()
    {
    	const int opt=1;
        return setsockopt(sfd,SOL_SOCKET,SO_BROADCAST,(char *)&opt, sizeof(opt));
    }
    struct sockaddr_in getlastrecvfrom()
    {
        return last_recvfrom;
    };

    int getfd()
    {
        return sfd;
    }
private:
    int sfd;
    struct sockaddr_in target;
    struct sockaddr_in last_recvfrom;
};
